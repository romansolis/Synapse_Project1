{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "admind2d2"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"admind2d2-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'admind2d2-WorkspaceDefaultSqlServer'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rjsdatalake2022.dfs.core.windows.net"
		},
		"admind2d2-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rjsdatalake2022.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PatientID",
						"type": "INT32"
					},
					{
						"name": "Patient_Name",
						"type": "UTF8"
					},
					{
						"name": "Gender",
						"type": "UTF8"
					},
					{
						"name": "DateofBirth",
						"type": "DATE"
					},
					{
						"name": "Zipcode",
						"type": "INT32"
					},
					{
						"name": "Emp_status",
						"type": "UTF8"
					},
					{
						"name": "Education",
						"type": "UTF8"
					},
					{
						"name": "Marital_Status",
						"type": "UTF8"
					},
					{
						"name": "No_Children",
						"type": "INT32"
					},
					{
						"name": "Ancestry",
						"type": "UTF8"
					},
					{
						"name": "Avg_Commute",
						"type": "DOUBLE"
					},
					{
						"name": "Daily_Internet_Use",
						"type": "DOUBLE"
					},
					{
						"name": "Avlbl_Vehicle",
						"type": "INT32"
					},
					{
						"name": "Military_Service",
						"type": "UTF8"
					},
					{
						"name": "Disease",
						"type": "UTF8"
					},
					{
						"name": "YearofBirth",
						"type": "INT32"
					},
					{
						"name": "AgeofPatient",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/admind2d2-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('admind2d2-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/admind2d2-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('admind2d2-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPatientID as integer,\n\t\tPatient_Name as string,\n\t\tGender as string,\n\t\tDateofBirth as date,\n\t\tZipcode as integer,\n\t\tEmp_status as string,\n\t\tEducation as string,\n\t\tMarital_Status as string,\n\t\tNo_Children as integer,\n\t\tAncestry as string,\n\t\tAvg_Commute as double,\n\t\tDaily_Internet_Use as double,\n\t\tAvlbl_Vehicle as integer,\n\t\tMilitary_Service as string,\n\t\tDisease as string,\n\t\tYearofBirth as integer,\n\t\tAgeofPatient as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPatientID as integer,\n\t\tPatient_Name as string,\n\t\tGender as string,\n\t\tDateofBirth as date,\n\t\tZipcode as integer,\n\t\tEmp_status as string,\n\t\tEducation as string,\n\t\tMarital_Status as string,\n\t\tNo_Children as integer,\n\t\tAncestry as string,\n\t\tAvg_Commute as double,\n\t\tDaily_Internet_Use as double,\n\t\tAvlbl_Vehicle as integer,\n\t\tMilitary_Service as string,\n\t\tDisease as string,\n\t\tYearofBirth as integer,\n\t\tAgeofPatient as integer\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select @@version",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'synapse_rjsdatalake2022_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [synapse_rjsdatalake2022_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://synapse@rjsdatalake2022.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE MedicalParquet (\n\t[PatientID] int,\n\t[Patient_Name] nvarchar(4000),\n\t[Gender] nvarchar(4000),\n\t[DateofBirth] date,\n\t[Zipcode] int,\n\t[Emp_status] nvarchar(4000),\n\t[Education] nvarchar(4000),\n\t[Marital_Status] nvarchar(4000),\n\t[No_Children] int,\n\t[Ancestry] nvarchar(4000),\n\t[Avg_Commute] float,\n\t[Daily_Internet_Use] float,\n\t[Avlbl_Vehicle] int,\n\t[Military_Service] nvarchar(4000),\n\t[Disease] nvarchar(4000),\n\t[YearofBirth] int,\n\t[AgeofPatient] int\n\t)\n\tWITH (\n\tLOCATION = 'part-00000-tid-2013025554024980159-c16f1e58-918c-4ec6-8ba2-dab54b44e264-4-1-c000.snappy.parquet',\n\tDATA_SOURCE = [synapse_rjsdatalake2022_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.MedicalParquet\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "rjsMedicalMerge",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [PatientID]\n,[Patient_Name]\n,[Gender]\n,[DateofBirth]\n,[Zipcode]\n,[Emp_status]\n,[Education]\n,[Marital_Status]\n,[No_Children]\n,[Ancestry]\n,[Avg_Commute]\n,[Daily_Internet_Use]\n,[Avlbl_Vehicle]\n,[Military_Service]\n,[Disease]\n,[YearofBirth]\n,[AgeofPatient]\n FROM [dbo].[MedicalParquet]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "rjsMedicalMerge",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}